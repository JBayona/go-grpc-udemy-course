syntax = "proto3";

package calculator;
option go_package = "calculatorpb";

message SumRequest {
  int32 first_number = 1;
  int32 second_number = 2;
}

message SumResponse {
  int32 sum_result = 1;
}

message PrimerNumberDescompositionRequest {
  int32 number = 1;
}

message PrimerNumberDescompositionResponse {
  int32 result = 1;
}

message ComputerAverageRequest {
  int32 number = 1;
}

message ComputerAverageResponse {
  double result = 1;
}

message FindMaximumRequest {
  int32 number = 1;
}

message FindMaximumResponse {
  int32 result = 1;
}

message SquareRootRequest {
  int32 number = 1;
}

message SquareRootResponse {
  double number_root = 1;
}

service CalculatorService {
  // Unary Server
  rpc Sum (SumRequest) returns (SumResponse) {};
  // Server Streaming
  rpc PrimeNumberDecomposition (PrimerNumberDescompositionRequest) returns (stream PrimerNumberDescompositionResponse) {};
  // Client Streaming
  rpc ComputeAverage (stream ComputerAverageRequest) returns (ComputerAverageResponse) {};
  // Bidirectional Streaming
  rpc FindMaximum (stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

  // error handling
  // This RPC will throw an exception if the sent number is negative
  // The error being sent is of type INVALID_ARGUMENT
  rpc SquareRoot (SquareRootRequest) returns (SquareRootResponse) {};
}

